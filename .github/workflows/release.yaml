name: Automated Release Workflow

on:
  push:
    branches:
        - 'dev'
    paths:
      - 'custom_components/**'
  pull_request:
    types:
        - closed
    branches:
        - main

permissions:
  contents: write

jobs:
  beta-release:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
    
      - name: Bump version and push tag (Beta)
        id: bump_beta_version
        uses: anothrNick/github-tag-action@1.64.0
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            PRERELEASE: true
            WITH_V: true
            DEFAULT_BUMP: "patch"
            PRERELEASE_SUFFIX: beta.${{ github.run_number }}
    
      - name: Create or Overwrite Beta Release
        uses: ncipollo/release-action@v1
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ steps.bump_beta_version.outputs.new_tag }}
            name: Beta Release - ${{ steps.bump_beta_version.outputs.new_tag }}
            allowUpdates: true
            prerelease: true

  purge-beta-releases:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Purge Beta Releases
        run: bash ${GITHUB_WORKSPACE}/purge.sh
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            MERGED_BRANCH: ${{ github.event.pull_request.head.ref }}
            GITHUB_REPOSITORY: ${{ github.repository }}
              

  latest-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
            ref: ${{ github.event.pull_request.merge_commit_sha }}
            fetch-depth: '0'
    
      - name: Bump version and push tag (Latest)
        id: bump_latest_version
        uses: anothrNick/github-tag-action@1.64.0
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            WITH_V: true
            DEFAULT_BUMP: "minor"

      - name: Check out main
        uses: actions/checkout@v4
        with:
            ref: main
    
      - name: Update manifest.json with new version
        run: |
            VERSION_TAG=${{ steps.bump_latest_version.outputs.new_tag }}
            jq '.version = "'$VERSION_TAG'"' custom_components/pagerduty/manifest.json > temp.json && mv temp.json custom_components/pagerduty/manifest.json
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add custom_components/pagerduty/manifest.json
            git commit -m "Update version in manifest to $VERSION_TAG"
            git push
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Create Latest Release
        uses: ncipollo/release-action@v1
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ steps.bump_latest_version.outputs.new_tag }}
            name: "Release ${{ steps.bump_latest_version.outputs.new_tag }}"
            body: ${{ github.event.pull_request.body }}
            draft: false
            prerelease: false
